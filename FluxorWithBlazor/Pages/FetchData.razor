@page "/fetchdata"
@using FluxorWithBlazor.State.Weather
@inject IDispatcher dispatcher
@inject IState<WeatherState> weatherState
<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@{
    Console.WriteLine(weatherState.Value.Forecasts);
}
@if (weatherState.Value.Forecasts == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Date</th>
				<th>Temp. (C)</th>
				<th>Temp. (F)</th>
				<th>Summary</th>
			</tr>
		</thead>
		<tbody>
@{
    Console.WriteLine(weatherState.Value.Forecasts.Count());
}
			@foreach (var forecast in weatherState?.Value?.Forecasts)
			{
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
			}
		</tbody>
	</table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        dispatcher.Dispatch(new FetchDataAction());
    }
}
